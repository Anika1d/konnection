apply plugin: 'base'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'

task stubSources(type: Jar) {
 // from kotlin.sourceSets.commonMain.kotlin
    archiveClassifier.set("sources")
}
task stubJavadoc(type: Jar) {
    archiveClassifier.set("javadoc")
}

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId = project.group
        if (it.name.contains('metadata')) {
            artifactId = "${project.name}"
        } else {
            artifactId = "${project.name}-$name"
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "magnumrocha"
            name 'Magnum Rocha'
            organization 'TMApps'
            organizationUrl 'http://github.com/TM-Apps'
        }
    }

    scm {
        url "https://github.com/TM-Apps/konnection"
    }
}

def withPom = { pom ->
    pom.withXml {
        def root = asNode()
        root.appendNode('name', project.name)
        root.appendNode('description', 'A Kotlin Multiplatform Mobile library to emit Network Connection status.')
        root.appendNode('url', 'https://github.com/TM-Apps/konnection')
        root.children().last() + pomConfig
    }
}

publishing {
 // repositories {
 //     maven {
 //         url  = 'https://dl.bintray.com/tmapps/maven'
 //     }
 // }

    publications {
        kotlinMultiplatform {
            groupId project.group
            artifactId project.name
            version project.version

            artifact stubSources
            artifact stubJavadoc

  //        if (project.name.endsWith('android')) {
  //            artifact("$buildDir/outputs/aar/konnection-android-debug.aar")
  //        }

            withPom(pom)
        }
    }
}

bintray {
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')

  // configurations = ['archives']
  // publications = ['mavenProject']

    publish = true // make files public
    override = true // override existing artifact

    // metadata
    pkg {
        userOrg = 'tmapps'
        repo = 'maven'
        name = 'konnection'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/TM-Apps/konnection'
        issueTrackerUrl = 'https://github.com/TM-Apps/konnection/issues'
        publicDownloadNumbers = true

        version {
          //  name = project.version
            released = new Date()
            vcsTag = project.version

            gpg {
                sign = true // determines whether to GPG sign the files. The default is false
                // passphrase = System.getenv('BINTRAY_PASSPHRASE')
                // optional. The passphrase for GPG signing'
            }
        }
    }
}

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
// In the mpp configuration of one module after 1.3, it is not uploaded unless you explicitly
// specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatform but a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = project.publishing.publications // .collect {
 //     it.name
 // }.findAll {
 //     it != "kotlinMultiplatform"
 // }
}
